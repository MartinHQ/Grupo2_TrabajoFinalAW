Index: Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/controllers/TransaccionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pe.edu.upc.TrabajoBackEnd.controllers;\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport pe.edu.upc.TrabajoBackEnd.dtos.TransaccionDTO;\r\nimport pe.edu.upc.TrabajoBackEnd.entities.Transaccion;\r\nimport pe.edu.upc.TrabajoBackEnd.servicesinterfaces.ITransaccionService;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n@RestController\r\n@RequestMapping(\"/transacciones\")\r\npublic class TransaccionController {\r\n    @Autowired\r\n    private ITransaccionService tS;\r\n    @PostMapping\r\n    public void insertarUsuario(@RequestBody TransaccionDTO transaccionDTO) {\r\n        ModelMapper m = new ModelMapper();\r\n        Transaccion transaccion = m.map(transaccionDTO, Transaccion.class);\r\n        tS.insert(transaccion);\r\n    }\r\n    @GetMapping\r\n    public List<TransaccionDTO> listarTransaccion() {\r\n        return tS.list().stream().map(y->{\r\n            ModelMapper m = new ModelMapper();\r\n            return m.map(y, TransaccionDTO.class);\r\n        }).collect(Collectors.toList());\r\n    }\r\n    @DeleteMapping(\"/{id}\")\r\n    public void delete(@PathVariable(\"id\") Integer id) { tS.delete(id); }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/controllers/TransaccionController.java b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/controllers/TransaccionController.java
--- a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/controllers/TransaccionController.java	(revision 62c8c0136ef6e8a08f1dd74c70a5f6511d84901c)
+++ b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/controllers/TransaccionController.java	(date 1713821968774)
@@ -5,6 +5,8 @@
 import pe.edu.upc.TrabajoBackEnd.dtos.TransaccionDTO;
 import pe.edu.upc.TrabajoBackEnd.entities.Transaccion;
 import pe.edu.upc.TrabajoBackEnd.servicesinterfaces.ITransaccionService;
+
+import java.time.LocalDate;
 import java.util.List;
 import java.util.stream.Collectors;
 @RestController
@@ -27,4 +29,12 @@
     }
     @DeleteMapping("/{id}")
     public void delete(@PathVariable("id") Integer id) { tS.delete(id); }
+
+    @GetMapping("/query4")
+    public List<String[]> obtenerAhorroPorCategoriaMensual(@RequestParam LocalDate fecha) {
+        int mes = fecha.getMonthValue();
+        int año = fecha.getYear();
+        return tS.ahorroporctgmensual(mes, año);
+    }
+
 }
Index: Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesinterfaces/ITransaccionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pe.edu.upc.TrabajoBackEnd.servicesinterfaces;\r\n\r\nimport pe.edu.upc.TrabajoBackEnd.entities.Transaccion;\r\n\r\nimport java.util.List;\r\n\r\npublic interface ITransaccionService {\r\n    public void insert(Transaccion transaccion);\r\n    public List<Transaccion> list();\r\n    public void delete(int id);\r\n    public Transaccion listId(int id);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesinterfaces/ITransaccionService.java b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesinterfaces/ITransaccionService.java
--- a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesinterfaces/ITransaccionService.java	(revision 62c8c0136ef6e8a08f1dd74c70a5f6511d84901c)
+++ b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesinterfaces/ITransaccionService.java	(date 1713821830436)
@@ -9,4 +9,6 @@
     public List<Transaccion> list();
     public void delete(int id);
     public Transaccion listId(int id);
+
+    List<String[]> ahorroporctgmensual(int mes, int año);
 }
Index: Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesimplements/TransaccionServiceImplement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pe.edu.upc.TrabajoBackEnd.servicesimplements;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport pe.edu.upc.TrabajoBackEnd.entities.Transaccion;\r\nimport pe.edu.upc.TrabajoBackEnd.repositories.ITransaccionRepository;\r\nimport pe.edu.upc.TrabajoBackEnd.servicesinterfaces.ITransaccionService;\r\nimport java.util.List;\r\n@Service\r\npublic class TransaccionServiceImplement implements ITransaccionService {\r\n    @Autowired\r\n    private ITransaccionRepository tR;\r\n    @Override\r\n    public void insert(Transaccion transaccion) { tR.save(transaccion); }\r\n    @Override\r\n    public List<Transaccion> list() { return tR.findAll(); }\r\n    @Override\r\n    public void delete(int id) { tR.deleteById(id); }\r\n    @Override\r\n    public Transaccion listId(int id) { return tR.findById(id).orElse(new Transaccion()); }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesimplements/TransaccionServiceImplement.java b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesimplements/TransaccionServiceImplement.java
--- a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesimplements/TransaccionServiceImplement.java	(revision 62c8c0136ef6e8a08f1dd74c70a5f6511d84901c)
+++ b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/servicesimplements/TransaccionServiceImplement.java	(date 1713822043720)
@@ -17,4 +17,9 @@
     public void delete(int id) { tR.deleteById(id); }
     @Override
     public Transaccion listId(int id) { return tR.findById(id).orElse(new Transaccion()); }
+
+    @Override
+    public List<String[]> ahorroporctgmensual(int mes, int año) {
+        return List.of();
+    }
 }
Index: Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/repositories/ITransaccionRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pe.edu.upc.TrabajoBackEnd.repositories;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\nimport pe.edu.upc.TrabajoBackEnd.entities.Transaccion;\r\n@Repository\r\npublic interface ITransaccionRepository extends JpaRepository<Transaccion, Integer> {\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/repositories/ITransaccionRepository.java b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/repositories/ITransaccionRepository.java
--- a/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/repositories/ITransaccionRepository.java	(revision 62c8c0136ef6e8a08f1dd74c70a5f6511d84901c)
+++ b/Back End/TrabajoBackEnd/src/main/java/pe/edu/upc/TrabajoBackEnd/repositories/ITransaccionRepository.java	(date 1713821649425)
@@ -1,7 +1,26 @@
 package pe.edu.upc.TrabajoBackEnd.repositories;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.query.Param;
 import org.springframework.stereotype.Repository;
 import pe.edu.upc.TrabajoBackEnd.entities.Transaccion;
+
+import java.util.List;
+
 @Repository
 public interface ITransaccionRepository extends JpaRepository<Transaccion, Integer> {
+    @Query(value="SELECT \n" +
+            "    c.nombre AS categoria,\n" +
+            "    SUM(CASE WHEN t.es_ingreso THEN t.monto ELSE 0 END) AS ingresos,\n" +
+            "    SUM(CASE WHEN NOT t.es_ingreso THEN t.monto ELSE 0 END) AS egresos,\n" +
+            "    SUM(CASE WHEN t.es_ingreso THEN t.monto ELSE -t.monto END) AS ahorro\n" +
+            "FROM \n" +
+            "    Transaccion t\n" +
+            "INNER JOIN \n" +
+            "    CategoriaTranx c ON t.categoria_id = c.categoria_id\n" +
+            "WHERE \n" +
+            "    MONTH(t.fecha) = [mes_deseado] AND YEAR(t.fecha) = [año_deseado]\n" +
+            "GROUP BY \n" +
+            "    c.nombre\n", nativeQuery = true)
+    public List<String[]> ahorroporctgmensual(@Param("mes") int mes,@Param("año") int año);
 }
\ No newline at end of file
